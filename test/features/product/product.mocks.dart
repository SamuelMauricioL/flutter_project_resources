// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_project_resources/test/features/product/product.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_project_resources/api/product_api.dart' as _i3;
import 'package:flutter_project_resources/http/http_result.dart' as _i2;
import 'package:flutter_project_resources/manager/product_manager.dart' as _i5;
import 'package:flutter_project_resources/models/product_model.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHttpResult_0<T> extends _i1.Fake implements _i2.HttpResult<T> {}

class _FakeProductApi_1 extends _i1.Fake implements _i3.ProductApi {}

/// A class which mocks [ProductApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductApi extends _i1.Mock implements _i3.ProductApi {
  MockProductApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HttpResult<dynamic>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue:
            Future<_i2.HttpResult<dynamic>>.value(_FakeHttpResult_0<dynamic>()),
      ) as _i4.Future<_i2.HttpResult<dynamic>>);
}

/// A class which mocks [ProductManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductManager extends _i1.Mock implements _i5.ProductManager {
  MockProductManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ProductApi get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeProductApi_1(),
      ) as _i3.ProductApi);
  @override
  set api(_i3.ProductApi? _api) => super.noSuchMethod(
        Invocation.setter(
          #api,
          _api,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<List<_i6.ProductModel>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: Future<List<_i6.ProductModel>>.value(<_i6.ProductModel>[]),
      ) as _i4.Future<List<_i6.ProductModel>>);
}

/// A class which mocks [ProductApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetRemoteDatasource extends _i1.Mock implements _i3.ProductApi {
  MockAssetRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HttpResult<dynamic>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue:
            Future<_i2.HttpResult<dynamic>>.value(_FakeHttpResult_0<dynamic>()),
      ) as _i4.Future<_i2.HttpResult<dynamic>>);
}

/// A class which mocks [ProductManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetApiHandler extends _i1.Mock implements _i5.ProductManager {
  MockAssetApiHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ProductApi get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeProductApi_1(),
      ) as _i3.ProductApi);
  @override
  set api(_i3.ProductApi? _api) => super.noSuchMethod(
        Invocation.setter(
          #api,
          _api,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<List<_i6.ProductModel>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: Future<List<_i6.ProductModel>>.value(<_i6.ProductModel>[]),
      ) as _i4.Future<List<_i6.ProductModel>>);
}
